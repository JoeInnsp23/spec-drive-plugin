# Observability

**Project:** {{PROJECT_NAME}}
**Last Updated:** {{DATE}}

## Overview

This document describes how {{PROJECT_NAME}} is monitored and observed.

## Logging

### Log Levels

- **ERROR:** System errors requiring attention
- **WARN:** Warning conditions
- **INFO:** Informational messages
- **DEBUG:** Debug information

### Log Destinations

- Local: Console / Files
- Production: Logging service (e.g., CloudWatch, Datadog)

### Log Format

```json
{
  "timestamp": "2025-01-01T10:00:00Z",
  "level": "INFO",
  "message": "User logged in",
  "context": {
    "userId": "123",
    "ip": "1.2.3.4"
  }
}
```

## Metrics

### Key Metrics

- **Response Time:** p50, p95, p99
- **Error Rate:** Errors per minute
- **Throughput:** Requests per second
- **Resource Usage:** CPU, Memory, Disk

### Metrics Collection

- Tool: Prometheus / CloudWatch / Datadog
- Dashboard: Link to dashboard

## Tracing

### Distributed Tracing

- Tool: Jaeger / X-Ray
- Trace IDs propagated across services

## Alerting

### Critical Alerts

- **High Error Rate:** > 5% errors for 5 minutes
- **Slow Response:** p95 > 2s for 5 minutes
- **Service Down:** Health check fails

### Alert Channels

- Email: team@example.com
- Slack: #alerts
- PagerDuty: On-call rotation

---

ðŸ¤– Generated by spec-drive
